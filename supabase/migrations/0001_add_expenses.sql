-- Create a table for public profiles
create table expenses (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  item_name text not null,
  amount numeric(10, 2) not null,
  expense_date date not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Set up Row Level Security (RLS)
alter table expenses enable row level security;

create policy "Customers can view their own expenses" on expenses
  for select to authenticated using (
    auth.uid() = user_id and
    (select raw_user_meta_data->>'role' from auth.users where id = auth.uid()) = 'customer'
  );

create policy "Customers can insert their own expenses" on expenses
  for insert to authenticated with check (
    auth.uid() = user_id and
    (select raw_user_meta_data->>'role' from auth.users where id = auth.uid()) = 'customer'
  );

create policy "Customers can delete their own expenses" on expenses
  for delete to authenticated using (
    auth.uid() = user_id and
    (select raw_user_meta_data->>'role' from auth.users where id = auth.uid()) = 'customer'
  );
